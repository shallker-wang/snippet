// Generated by CoffeeScript 1.4.0
(function() {
  var SnippetList,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  SnippetList = (function(_super) {

    __extends(SnippetList, _super);

    SnippetList.prototype.tag = 'div';

    SnippetList.prototype.className = 'spine-list';

    SnippetList.prototype.tpl = '#tpl-snippet-list';

    SnippetList.prototype.elements = {
      'ul': 'list'
    };

    function SnippetList() {
      this.appendAll = __bind(this.appendAll, this);

      this.appendOne = __bind(this.appendOne, this);
      SnippetList.__super__.constructor.apply(this, arguments);
      this.el.append($(this.tpl).clone().html());
      this.refreshElements();
      Snippet.bind("refresh", this.appendAll);
      Snippet.fetch();
    }

    SnippetList.prototype.appendOne = function(item) {
      return this.list.append("<li><a>" + item.name + "</a></li>");
    };

    SnippetList.prototype.appendAll = function(items) {
      var item, _i, _len, _results;
      _results = [];
      for (_i = 0, _len = items.length; _i < _len; _i++) {
        item = items[_i];
        _results.push(this.appendOne(item));
      }
      return _results;
    };

    return SnippetList;

  })(Spine.Controller);

  this.SnippetList = SnippetList;

}).call(this);
